{
  "TukeysFilter": {
    "scheduler_options": {
      "interval_secs": 30,
      "plugin_args": {
        "name": "TukeysFilter"
      }
    },
    "service_options": {
      "service1": {
        "quantile_25": "service.quartil_25",
        "quantile_75": "service.quartil_75",
        "iqr_scaling": 2,
        "metric": "system.*",
        "default": 0,
        "offset": 60,
        "maximum_delay": 900,
        "model": [
          {
            "RedisTimeStamped": {
              "ttl": 10000
            }
          }
        ]
      }
    }
  },
  "SeasonalDecomposition": {
    "scheduler_options": {
      "interval_secs": 30,
      "plugin_args": {
        "name": "SeasonalDecomposition"
      }
    },
    "service_options": {
      "stl_service1": {
        "metric": "system.loadavg",
        "period_length": 6,
        "seasons": 2,
        "error_params": {
          "error_type": "norm",
          "error_handling": "quantile",
          "alpha": 0.01,
          "minimal_upper_threshold": 0.1,
          "minimal_lower_threshold": -0.1
       },
       "model": [
          {
            "RedisIntervalTimeStamped": {
              "ttl": 10000,
              "interval": 300
            }
          }
       ]
      }
    }
  },
  "SeasonalDecompositionEnsemble": {
    "scheduler_options": {
      "interval_secs": 30,
      "plugin_args": {
        "name": "SeasonalDecompositionEnsemble"
      }
    },
    "service_options": {
      "stle_service1": {
        "metric": "system.loadavg_*",
        "period_length": 6,
        "seasons": 2,
        "interval": 10,
        "error_params": {
          "scaling": 2,
          "minimal_upper_threshold": 0.1,
          "minimal_lower_threshold": -0.1,
          "treshold": 2
        },
       "model": [
          {
            "RedisIntervalTimeStamped": {
              "ttl": 10000,
              "interval": 300
            }
          }
       ]
      }
    }
  },
  "FlowDifference": {
    "scheduler_options": {
      "interval_secs": 30,
      "plugin_args": {
        "name": "FlowDifference"
      }
    },
    "service_options": {
      "fd_service1": {
        "in_metric": "service1.out",
        "out_metric": "service2.in",
        "stale": 10,
        "error_params": {
          "scaling": 2,
          "minimal_upper_threshold": 0.1,
          "minimal_lower_threshold": -0.1
        },
       "model": [
          {
            "RedisIntervalTimeStamped": {
              "ttl": 10000,
              "interval": 300
            }
          }
       ]
      }
    }
  }
}
